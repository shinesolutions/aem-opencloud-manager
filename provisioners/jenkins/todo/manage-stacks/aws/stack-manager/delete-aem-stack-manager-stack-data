@Library('aem-opencloud-manager') _

def configString = libraryResource 'aem_opencloud/config.json'
def config = readJSON text: configString

pipeline {
    agent {
        docker {
            image params.JENKINS_AGENT_DOCKER_IMAGE
            args params.JENKINS_AGENT_DOCKER_ARGS
        }
    }
    environment {
        TMPDIR = "/tmp/shinesolutions/aem-opencloud-manager"
        AOC_CONFIG_DIR = "${env.TMPDIR}/aem-opencloud-config"
    }
    parameters {

        string(name: 'STACK_PREFIX', defaultValue: '', description: 'AEM OpenCloud stack prefix.')
        string(name: 'AOC_VERSION_AEM_AWS_STACK_BUILDER', defaultValue: config.library.aem_aws_stack_builder, description: 'Version of aem-aws-stack-builder repo to archive')
    }
    stages {
        stage('Initialise Jenkins pipeline') {
            steps {

                JenkinsInit(this, params.AOC_CUSTOM_MANAGER_STEPS_ARTIFACT_URL, env.TMPDIR)

                JenkinsPipelinePreStep this
            }
        }
        stage('Prepare AEM OpenCloud libraries and configuration') {
            steps {


                    JenkinsStagePreStep this

                    AocPrepareLibrary(this, "aem-aws-stack-builder", params.AOC_VERSION_AEM_AWS_STACK_BUILDER, params.AWS_LIBRARY_S3_BUCKET, AWS_LIBRARY_S3_PATH, env.TMPDIR)
            }
            post {
                always {

                  JenkinsStagePostStep this
                }
            }
        }
        stage('Resolve dependencies') {
            steps {


                    JenkinsStagePreStep this

                    ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make deps")
            }
            post {
                always {

                  JenkinsStagePostStep this
                }
            }
        }
        stage('Prepare library configuration') {
            steps {


                    JenkinsStagePreStep this

                    ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make config config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/")
            }
            post {
                always {

                  JenkinsStagePostStep this
                }
            }
        }
        stage('Remove generated AEM OpenCloud Stack Manager Data') {
            steps {


                    JenkinsStagePreStep this
                    // Remove generated AEM OpenCloud Stack Manager Data
                    ExecCommand(this, env.TMPDIR, "aem-aws-stack-builder", "make delete-aem-stack-manager-stack-data config_path=${env.AOC_CONFIG_DIR}/aem-aws-stack-builder/${params.AOC_CONFIG_PROFILE}/ stack_prefix=${params.STACK_PREFIX}")
                    }
                }
                post {
                    always {

                      JenkinsStagePostStep this
                    }
                }
            }
        }
    post {
        always {

            JenkinsPipelinePostStep this
        }
    }
}
